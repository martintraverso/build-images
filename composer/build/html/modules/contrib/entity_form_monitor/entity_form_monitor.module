<?php

use Drupal\Core\Entity\EntityForm;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_form_alter().
 */
function entity_form_monitor_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $form_class = $form_state->getFormObject();
  if ($form_class instanceof EntityForm) {
    _entity_form_monitor_process_entity_form($form, $form_class->getEntity());
  }
}

/**
 * Implements hook_inline_entity_form_entity_form_alter().
 */
function entity_form_monitor_inline_entity_form_entity_form_alter(&$entity_form, &$form_state) {
  _entity_form_monitor_process_entity_form($entity_form, $entity_form['#entity']);
}

/**
 * Add entity monitoring to a form.
 *
 * @param array $form
 *   Nested array of form elements that comprise the entity form.
 * @param \Drupal\Core\Entity\EntityInterface $entity
 *   The entity that corresponds to the form.
 */
function _entity_form_monitor_process_entity_form(array &$form, EntityInterface $entity) {
  if (!$entity->isNew() && method_exists($entity, 'getChangedTime')) {
    // Combine the entity type and ID into one string so it is less data to
    // pass around.
    $form['#attributes']['data-entity-form-monitor'] = $entity->getEntityTypeId() . ':' . $entity->id();
    // Add the timestamp for when the entity was last changed so we can
    // compare it vs the timestamp from the monitoring AJAX request.
    $form['#attributes']['data-entity-last-changed'] = $entity->getChangedTime();
    $config = \Drupal::config('entity_form_monitor.settings');
    $form['#attached']['drupalSettings']['entityFormMonitor']['interval'] = $config->get('interval');
    $form['#attached']['library'][] = 'entity_form_monitor/monitor';
  }
}
